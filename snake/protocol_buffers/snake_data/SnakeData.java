// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: snake_data.proto

package snake_data;

public final class SnakeData {
  private SnakeData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BoardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snake_data.Board)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .snake_data.Feed feeds = 1;</code>
     */
    java.util.List<snake_data.SnakeData.Feed> 
        getFeedsList();
    /**
     * <code>repeated .snake_data.Feed feeds = 1;</code>
     */
    snake_data.SnakeData.Feed getFeeds(int index);
    /**
     * <code>repeated .snake_data.Feed feeds = 1;</code>
     */
    int getFeedsCount();
    /**
     * <code>repeated .snake_data.Feed feeds = 1;</code>
     */
    java.util.List<? extends snake_data.SnakeData.FeedOrBuilder> 
        getFeedsOrBuilderList();
    /**
     * <code>repeated .snake_data.Feed feeds = 1;</code>
     */
    snake_data.SnakeData.FeedOrBuilder getFeedsOrBuilder(
        int index);

    /**
     * <code>repeated .snake_data.User users = 2;</code>
     */
    java.util.List<snake_data.SnakeData.User> 
        getUsersList();
    /**
     * <code>repeated .snake_data.User users = 2;</code>
     */
    snake_data.SnakeData.User getUsers(int index);
    /**
     * <code>repeated .snake_data.User users = 2;</code>
     */
    int getUsersCount();
    /**
     * <code>repeated .snake_data.User users = 2;</code>
     */
    java.util.List<? extends snake_data.SnakeData.UserOrBuilder> 
        getUsersOrBuilderList();
    /**
     * <code>repeated .snake_data.User users = 2;</code>
     */
    snake_data.SnakeData.UserOrBuilder getUsersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code snake_data.Board}
   */
  public static final class Board extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snake_data.Board)
      BoardOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Board.newBuilder() to construct.
    private Board(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Board() {
      feeds_ = java.util.Collections.emptyList();
      users_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Board();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Board(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                feeds_ = new java.util.ArrayList<snake_data.SnakeData.Feed>();
                mutable_bitField0_ |= 0x00000001;
              }
              feeds_.add(
                  input.readMessage(snake_data.SnakeData.Feed.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                users_ = new java.util.ArrayList<snake_data.SnakeData.User>();
                mutable_bitField0_ |= 0x00000002;
              }
              users_.add(
                  input.readMessage(snake_data.SnakeData.User.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          feeds_ = java.util.Collections.unmodifiableList(feeds_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          users_ = java.util.Collections.unmodifiableList(users_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return snake_data.SnakeData.internal_static_snake_data_Board_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return snake_data.SnakeData.internal_static_snake_data_Board_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              snake_data.SnakeData.Board.class, snake_data.SnakeData.Board.Builder.class);
    }

    public static final int FEEDS_FIELD_NUMBER = 1;
    private java.util.List<snake_data.SnakeData.Feed> feeds_;
    /**
     * <code>repeated .snake_data.Feed feeds = 1;</code>
     */
    @java.lang.Override
    public java.util.List<snake_data.SnakeData.Feed> getFeedsList() {
      return feeds_;
    }
    /**
     * <code>repeated .snake_data.Feed feeds = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends snake_data.SnakeData.FeedOrBuilder> 
        getFeedsOrBuilderList() {
      return feeds_;
    }
    /**
     * <code>repeated .snake_data.Feed feeds = 1;</code>
     */
    @java.lang.Override
    public int getFeedsCount() {
      return feeds_.size();
    }
    /**
     * <code>repeated .snake_data.Feed feeds = 1;</code>
     */
    @java.lang.Override
    public snake_data.SnakeData.Feed getFeeds(int index) {
      return feeds_.get(index);
    }
    /**
     * <code>repeated .snake_data.Feed feeds = 1;</code>
     */
    @java.lang.Override
    public snake_data.SnakeData.FeedOrBuilder getFeedsOrBuilder(
        int index) {
      return feeds_.get(index);
    }

    public static final int USERS_FIELD_NUMBER = 2;
    private java.util.List<snake_data.SnakeData.User> users_;
    /**
     * <code>repeated .snake_data.User users = 2;</code>
     */
    @java.lang.Override
    public java.util.List<snake_data.SnakeData.User> getUsersList() {
      return users_;
    }
    /**
     * <code>repeated .snake_data.User users = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends snake_data.SnakeData.UserOrBuilder> 
        getUsersOrBuilderList() {
      return users_;
    }
    /**
     * <code>repeated .snake_data.User users = 2;</code>
     */
    @java.lang.Override
    public int getUsersCount() {
      return users_.size();
    }
    /**
     * <code>repeated .snake_data.User users = 2;</code>
     */
    @java.lang.Override
    public snake_data.SnakeData.User getUsers(int index) {
      return users_.get(index);
    }
    /**
     * <code>repeated .snake_data.User users = 2;</code>
     */
    @java.lang.Override
    public snake_data.SnakeData.UserOrBuilder getUsersOrBuilder(
        int index) {
      return users_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < feeds_.size(); i++) {
        output.writeMessage(1, feeds_.get(i));
      }
      for (int i = 0; i < users_.size(); i++) {
        output.writeMessage(2, users_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < feeds_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, feeds_.get(i));
      }
      for (int i = 0; i < users_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, users_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof snake_data.SnakeData.Board)) {
        return super.equals(obj);
      }
      snake_data.SnakeData.Board other = (snake_data.SnakeData.Board) obj;

      if (!getFeedsList()
          .equals(other.getFeedsList())) return false;
      if (!getUsersList()
          .equals(other.getUsersList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFeedsCount() > 0) {
        hash = (37 * hash) + FEEDS_FIELD_NUMBER;
        hash = (53 * hash) + getFeedsList().hashCode();
      }
      if (getUsersCount() > 0) {
        hash = (37 * hash) + USERS_FIELD_NUMBER;
        hash = (53 * hash) + getUsersList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static snake_data.SnakeData.Board parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static snake_data.SnakeData.Board parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static snake_data.SnakeData.Board parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static snake_data.SnakeData.Board parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static snake_data.SnakeData.Board parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static snake_data.SnakeData.Board parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static snake_data.SnakeData.Board parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static snake_data.SnakeData.Board parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static snake_data.SnakeData.Board parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static snake_data.SnakeData.Board parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static snake_data.SnakeData.Board parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static snake_data.SnakeData.Board parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(snake_data.SnakeData.Board prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code snake_data.Board}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snake_data.Board)
        snake_data.SnakeData.BoardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return snake_data.SnakeData.internal_static_snake_data_Board_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return snake_data.SnakeData.internal_static_snake_data_Board_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                snake_data.SnakeData.Board.class, snake_data.SnakeData.Board.Builder.class);
      }

      // Construct using snake_data.SnakeData.Board.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFeedsFieldBuilder();
          getUsersFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (feedsBuilder_ == null) {
          feeds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          feedsBuilder_.clear();
        }
        if (usersBuilder_ == null) {
          users_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          usersBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return snake_data.SnakeData.internal_static_snake_data_Board_descriptor;
      }

      @java.lang.Override
      public snake_data.SnakeData.Board getDefaultInstanceForType() {
        return snake_data.SnakeData.Board.getDefaultInstance();
      }

      @java.lang.Override
      public snake_data.SnakeData.Board build() {
        snake_data.SnakeData.Board result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public snake_data.SnakeData.Board buildPartial() {
        snake_data.SnakeData.Board result = new snake_data.SnakeData.Board(this);
        int from_bitField0_ = bitField0_;
        if (feedsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            feeds_ = java.util.Collections.unmodifiableList(feeds_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.feeds_ = feeds_;
        } else {
          result.feeds_ = feedsBuilder_.build();
        }
        if (usersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            users_ = java.util.Collections.unmodifiableList(users_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.users_ = users_;
        } else {
          result.users_ = usersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof snake_data.SnakeData.Board) {
          return mergeFrom((snake_data.SnakeData.Board)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(snake_data.SnakeData.Board other) {
        if (other == snake_data.SnakeData.Board.getDefaultInstance()) return this;
        if (feedsBuilder_ == null) {
          if (!other.feeds_.isEmpty()) {
            if (feeds_.isEmpty()) {
              feeds_ = other.feeds_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFeedsIsMutable();
              feeds_.addAll(other.feeds_);
            }
            onChanged();
          }
        } else {
          if (!other.feeds_.isEmpty()) {
            if (feedsBuilder_.isEmpty()) {
              feedsBuilder_.dispose();
              feedsBuilder_ = null;
              feeds_ = other.feeds_;
              bitField0_ = (bitField0_ & ~0x00000001);
              feedsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFeedsFieldBuilder() : null;
            } else {
              feedsBuilder_.addAllMessages(other.feeds_);
            }
          }
        }
        if (usersBuilder_ == null) {
          if (!other.users_.isEmpty()) {
            if (users_.isEmpty()) {
              users_ = other.users_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureUsersIsMutable();
              users_.addAll(other.users_);
            }
            onChanged();
          }
        } else {
          if (!other.users_.isEmpty()) {
            if (usersBuilder_.isEmpty()) {
              usersBuilder_.dispose();
              usersBuilder_ = null;
              users_ = other.users_;
              bitField0_ = (bitField0_ & ~0x00000002);
              usersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getUsersFieldBuilder() : null;
            } else {
              usersBuilder_.addAllMessages(other.users_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        snake_data.SnakeData.Board parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (snake_data.SnakeData.Board) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<snake_data.SnakeData.Feed> feeds_ =
        java.util.Collections.emptyList();
      private void ensureFeedsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          feeds_ = new java.util.ArrayList<snake_data.SnakeData.Feed>(feeds_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          snake_data.SnakeData.Feed, snake_data.SnakeData.Feed.Builder, snake_data.SnakeData.FeedOrBuilder> feedsBuilder_;

      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public java.util.List<snake_data.SnakeData.Feed> getFeedsList() {
        if (feedsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(feeds_);
        } else {
          return feedsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public int getFeedsCount() {
        if (feedsBuilder_ == null) {
          return feeds_.size();
        } else {
          return feedsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public snake_data.SnakeData.Feed getFeeds(int index) {
        if (feedsBuilder_ == null) {
          return feeds_.get(index);
        } else {
          return feedsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public Builder setFeeds(
          int index, snake_data.SnakeData.Feed value) {
        if (feedsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeedsIsMutable();
          feeds_.set(index, value);
          onChanged();
        } else {
          feedsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public Builder setFeeds(
          int index, snake_data.SnakeData.Feed.Builder builderForValue) {
        if (feedsBuilder_ == null) {
          ensureFeedsIsMutable();
          feeds_.set(index, builderForValue.build());
          onChanged();
        } else {
          feedsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public Builder addFeeds(snake_data.SnakeData.Feed value) {
        if (feedsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeedsIsMutable();
          feeds_.add(value);
          onChanged();
        } else {
          feedsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public Builder addFeeds(
          int index, snake_data.SnakeData.Feed value) {
        if (feedsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeedsIsMutable();
          feeds_.add(index, value);
          onChanged();
        } else {
          feedsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public Builder addFeeds(
          snake_data.SnakeData.Feed.Builder builderForValue) {
        if (feedsBuilder_ == null) {
          ensureFeedsIsMutable();
          feeds_.add(builderForValue.build());
          onChanged();
        } else {
          feedsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public Builder addFeeds(
          int index, snake_data.SnakeData.Feed.Builder builderForValue) {
        if (feedsBuilder_ == null) {
          ensureFeedsIsMutable();
          feeds_.add(index, builderForValue.build());
          onChanged();
        } else {
          feedsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public Builder addAllFeeds(
          java.lang.Iterable<? extends snake_data.SnakeData.Feed> values) {
        if (feedsBuilder_ == null) {
          ensureFeedsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, feeds_);
          onChanged();
        } else {
          feedsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public Builder clearFeeds() {
        if (feedsBuilder_ == null) {
          feeds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          feedsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public Builder removeFeeds(int index) {
        if (feedsBuilder_ == null) {
          ensureFeedsIsMutable();
          feeds_.remove(index);
          onChanged();
        } else {
          feedsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public snake_data.SnakeData.Feed.Builder getFeedsBuilder(
          int index) {
        return getFeedsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public snake_data.SnakeData.FeedOrBuilder getFeedsOrBuilder(
          int index) {
        if (feedsBuilder_ == null) {
          return feeds_.get(index);  } else {
          return feedsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public java.util.List<? extends snake_data.SnakeData.FeedOrBuilder> 
           getFeedsOrBuilderList() {
        if (feedsBuilder_ != null) {
          return feedsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(feeds_);
        }
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public snake_data.SnakeData.Feed.Builder addFeedsBuilder() {
        return getFeedsFieldBuilder().addBuilder(
            snake_data.SnakeData.Feed.getDefaultInstance());
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public snake_data.SnakeData.Feed.Builder addFeedsBuilder(
          int index) {
        return getFeedsFieldBuilder().addBuilder(
            index, snake_data.SnakeData.Feed.getDefaultInstance());
      }
      /**
       * <code>repeated .snake_data.Feed feeds = 1;</code>
       */
      public java.util.List<snake_data.SnakeData.Feed.Builder> 
           getFeedsBuilderList() {
        return getFeedsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          snake_data.SnakeData.Feed, snake_data.SnakeData.Feed.Builder, snake_data.SnakeData.FeedOrBuilder> 
          getFeedsFieldBuilder() {
        if (feedsBuilder_ == null) {
          feedsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              snake_data.SnakeData.Feed, snake_data.SnakeData.Feed.Builder, snake_data.SnakeData.FeedOrBuilder>(
                  feeds_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          feeds_ = null;
        }
        return feedsBuilder_;
      }

      private java.util.List<snake_data.SnakeData.User> users_ =
        java.util.Collections.emptyList();
      private void ensureUsersIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          users_ = new java.util.ArrayList<snake_data.SnakeData.User>(users_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          snake_data.SnakeData.User, snake_data.SnakeData.User.Builder, snake_data.SnakeData.UserOrBuilder> usersBuilder_;

      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public java.util.List<snake_data.SnakeData.User> getUsersList() {
        if (usersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(users_);
        } else {
          return usersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public int getUsersCount() {
        if (usersBuilder_ == null) {
          return users_.size();
        } else {
          return usersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public snake_data.SnakeData.User getUsers(int index) {
        if (usersBuilder_ == null) {
          return users_.get(index);
        } else {
          return usersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public Builder setUsers(
          int index, snake_data.SnakeData.User value) {
        if (usersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsersIsMutable();
          users_.set(index, value);
          onChanged();
        } else {
          usersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public Builder setUsers(
          int index, snake_data.SnakeData.User.Builder builderForValue) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.set(index, builderForValue.build());
          onChanged();
        } else {
          usersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public Builder addUsers(snake_data.SnakeData.User value) {
        if (usersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsersIsMutable();
          users_.add(value);
          onChanged();
        } else {
          usersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public Builder addUsers(
          int index, snake_data.SnakeData.User value) {
        if (usersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsersIsMutable();
          users_.add(index, value);
          onChanged();
        } else {
          usersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public Builder addUsers(
          snake_data.SnakeData.User.Builder builderForValue) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.add(builderForValue.build());
          onChanged();
        } else {
          usersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public Builder addUsers(
          int index, snake_data.SnakeData.User.Builder builderForValue) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.add(index, builderForValue.build());
          onChanged();
        } else {
          usersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public Builder addAllUsers(
          java.lang.Iterable<? extends snake_data.SnakeData.User> values) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, users_);
          onChanged();
        } else {
          usersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public Builder clearUsers() {
        if (usersBuilder_ == null) {
          users_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          usersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public Builder removeUsers(int index) {
        if (usersBuilder_ == null) {
          ensureUsersIsMutable();
          users_.remove(index);
          onChanged();
        } else {
          usersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public snake_data.SnakeData.User.Builder getUsersBuilder(
          int index) {
        return getUsersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public snake_data.SnakeData.UserOrBuilder getUsersOrBuilder(
          int index) {
        if (usersBuilder_ == null) {
          return users_.get(index);  } else {
          return usersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public java.util.List<? extends snake_data.SnakeData.UserOrBuilder> 
           getUsersOrBuilderList() {
        if (usersBuilder_ != null) {
          return usersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(users_);
        }
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public snake_data.SnakeData.User.Builder addUsersBuilder() {
        return getUsersFieldBuilder().addBuilder(
            snake_data.SnakeData.User.getDefaultInstance());
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public snake_data.SnakeData.User.Builder addUsersBuilder(
          int index) {
        return getUsersFieldBuilder().addBuilder(
            index, snake_data.SnakeData.User.getDefaultInstance());
      }
      /**
       * <code>repeated .snake_data.User users = 2;</code>
       */
      public java.util.List<snake_data.SnakeData.User.Builder> 
           getUsersBuilderList() {
        return getUsersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          snake_data.SnakeData.User, snake_data.SnakeData.User.Builder, snake_data.SnakeData.UserOrBuilder> 
          getUsersFieldBuilder() {
        if (usersBuilder_ == null) {
          usersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              snake_data.SnakeData.User, snake_data.SnakeData.User.Builder, snake_data.SnakeData.UserOrBuilder>(
                  users_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          users_ = null;
        }
        return usersBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snake_data.Board)
    }

    // @@protoc_insertion_point(class_scope:snake_data.Board)
    private static final snake_data.SnakeData.Board DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new snake_data.SnakeData.Board();
    }

    public static snake_data.SnakeData.Board getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Board>
        PARSER = new com.google.protobuf.AbstractParser<Board>() {
      @java.lang.Override
      public Board parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Board(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Board> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Board> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public snake_data.SnakeData.Board getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CoordinateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snake_data.Coordinate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 x = 1;</code>
     * @return The x.
     */
    int getX();

    /**
     * <code>int32 y = 2;</code>
     * @return The y.
     */
    int getY();
  }
  /**
   * Protobuf type {@code snake_data.Coordinate}
   */
  public static final class Coordinate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snake_data.Coordinate)
      CoordinateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Coordinate.newBuilder() to construct.
    private Coordinate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Coordinate() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Coordinate();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Coordinate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              x_ = input.readInt32();
              break;
            }
            case 16: {

              y_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return snake_data.SnakeData.internal_static_snake_data_Coordinate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return snake_data.SnakeData.internal_static_snake_data_Coordinate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              snake_data.SnakeData.Coordinate.class, snake_data.SnakeData.Coordinate.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    /**
     * <code>int32 x = 1;</code>
     * @return The x.
     */
    @java.lang.Override
    public int getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    /**
     * <code>int32 y = 2;</code>
     * @return The y.
     */
    @java.lang.Override
    public int getY() {
      return y_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != 0) {
        output.writeInt32(1, x_);
      }
      if (y_ != 0) {
        output.writeInt32(2, y_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (y_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof snake_data.SnakeData.Coordinate)) {
        return super.equals(obj);
      }
      snake_data.SnakeData.Coordinate other = (snake_data.SnakeData.Coordinate) obj;

      if (getX()
          != other.getX()) return false;
      if (getY()
          != other.getY()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + getX();
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + getY();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static snake_data.SnakeData.Coordinate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static snake_data.SnakeData.Coordinate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static snake_data.SnakeData.Coordinate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static snake_data.SnakeData.Coordinate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static snake_data.SnakeData.Coordinate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static snake_data.SnakeData.Coordinate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static snake_data.SnakeData.Coordinate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static snake_data.SnakeData.Coordinate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static snake_data.SnakeData.Coordinate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static snake_data.SnakeData.Coordinate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static snake_data.SnakeData.Coordinate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static snake_data.SnakeData.Coordinate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(snake_data.SnakeData.Coordinate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code snake_data.Coordinate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snake_data.Coordinate)
        snake_data.SnakeData.CoordinateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return snake_data.SnakeData.internal_static_snake_data_Coordinate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return snake_data.SnakeData.internal_static_snake_data_Coordinate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                snake_data.SnakeData.Coordinate.class, snake_data.SnakeData.Coordinate.Builder.class);
      }

      // Construct using snake_data.SnakeData.Coordinate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        x_ = 0;

        y_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return snake_data.SnakeData.internal_static_snake_data_Coordinate_descriptor;
      }

      @java.lang.Override
      public snake_data.SnakeData.Coordinate getDefaultInstanceForType() {
        return snake_data.SnakeData.Coordinate.getDefaultInstance();
      }

      @java.lang.Override
      public snake_data.SnakeData.Coordinate build() {
        snake_data.SnakeData.Coordinate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public snake_data.SnakeData.Coordinate buildPartial() {
        snake_data.SnakeData.Coordinate result = new snake_data.SnakeData.Coordinate(this);
        result.x_ = x_;
        result.y_ = y_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof snake_data.SnakeData.Coordinate) {
          return mergeFrom((snake_data.SnakeData.Coordinate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(snake_data.SnakeData.Coordinate other) {
        if (other == snake_data.SnakeData.Coordinate.getDefaultInstance()) return this;
        if (other.getX() != 0) {
          setX(other.getX());
        }
        if (other.getY() != 0) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        snake_data.SnakeData.Coordinate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (snake_data.SnakeData.Coordinate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int x_ ;
      /**
       * <code>int32 x = 1;</code>
       * @return The x.
       */
      @java.lang.Override
      public int getX() {
        return x_;
      }
      /**
       * <code>int32 x = 1;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(int value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 x = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        
        x_ = 0;
        onChanged();
        return this;
      }

      private int y_ ;
      /**
       * <code>int32 y = 2;</code>
       * @return The y.
       */
      @java.lang.Override
      public int getY() {
        return y_;
      }
      /**
       * <code>int32 y = 2;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(int value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 y = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        
        y_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snake_data.Coordinate)
    }

    // @@protoc_insertion_point(class_scope:snake_data.Coordinate)
    private static final snake_data.SnakeData.Coordinate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new snake_data.SnakeData.Coordinate();
    }

    public static snake_data.SnakeData.Coordinate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Coordinate>
        PARSER = new com.google.protobuf.AbstractParser<Coordinate>() {
      @java.lang.Override
      public Coordinate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Coordinate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Coordinate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Coordinate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public snake_data.SnakeData.Coordinate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FeedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snake_data.Feed)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.snake_data.Coordinate point = 1;</code>
     * @return Whether the point field is set.
     */
    boolean hasPoint();
    /**
     * <code>.snake_data.Coordinate point = 1;</code>
     * @return The point.
     */
    snake_data.SnakeData.Coordinate getPoint();
    /**
     * <code>.snake_data.Coordinate point = 1;</code>
     */
    snake_data.SnakeData.CoordinateOrBuilder getPointOrBuilder();
  }
  /**
   * Protobuf type {@code snake_data.Feed}
   */
  public static final class Feed extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snake_data.Feed)
      FeedOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Feed.newBuilder() to construct.
    private Feed(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Feed() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Feed();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Feed(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              snake_data.SnakeData.Coordinate.Builder subBuilder = null;
              if (point_ != null) {
                subBuilder = point_.toBuilder();
              }
              point_ = input.readMessage(snake_data.SnakeData.Coordinate.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(point_);
                point_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return snake_data.SnakeData.internal_static_snake_data_Feed_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return snake_data.SnakeData.internal_static_snake_data_Feed_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              snake_data.SnakeData.Feed.class, snake_data.SnakeData.Feed.Builder.class);
    }

    public static final int POINT_FIELD_NUMBER = 1;
    private snake_data.SnakeData.Coordinate point_;
    /**
     * <code>.snake_data.Coordinate point = 1;</code>
     * @return Whether the point field is set.
     */
    @java.lang.Override
    public boolean hasPoint() {
      return point_ != null;
    }
    /**
     * <code>.snake_data.Coordinate point = 1;</code>
     * @return The point.
     */
    @java.lang.Override
    public snake_data.SnakeData.Coordinate getPoint() {
      return point_ == null ? snake_data.SnakeData.Coordinate.getDefaultInstance() : point_;
    }
    /**
     * <code>.snake_data.Coordinate point = 1;</code>
     */
    @java.lang.Override
    public snake_data.SnakeData.CoordinateOrBuilder getPointOrBuilder() {
      return getPoint();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (point_ != null) {
        output.writeMessage(1, getPoint());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (point_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPoint());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof snake_data.SnakeData.Feed)) {
        return super.equals(obj);
      }
      snake_data.SnakeData.Feed other = (snake_data.SnakeData.Feed) obj;

      if (hasPoint() != other.hasPoint()) return false;
      if (hasPoint()) {
        if (!getPoint()
            .equals(other.getPoint())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPoint()) {
        hash = (37 * hash) + POINT_FIELD_NUMBER;
        hash = (53 * hash) + getPoint().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static snake_data.SnakeData.Feed parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static snake_data.SnakeData.Feed parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static snake_data.SnakeData.Feed parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static snake_data.SnakeData.Feed parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static snake_data.SnakeData.Feed parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static snake_data.SnakeData.Feed parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static snake_data.SnakeData.Feed parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static snake_data.SnakeData.Feed parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static snake_data.SnakeData.Feed parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static snake_data.SnakeData.Feed parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static snake_data.SnakeData.Feed parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static snake_data.SnakeData.Feed parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(snake_data.SnakeData.Feed prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code snake_data.Feed}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snake_data.Feed)
        snake_data.SnakeData.FeedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return snake_data.SnakeData.internal_static_snake_data_Feed_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return snake_data.SnakeData.internal_static_snake_data_Feed_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                snake_data.SnakeData.Feed.class, snake_data.SnakeData.Feed.Builder.class);
      }

      // Construct using snake_data.SnakeData.Feed.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (pointBuilder_ == null) {
          point_ = null;
        } else {
          point_ = null;
          pointBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return snake_data.SnakeData.internal_static_snake_data_Feed_descriptor;
      }

      @java.lang.Override
      public snake_data.SnakeData.Feed getDefaultInstanceForType() {
        return snake_data.SnakeData.Feed.getDefaultInstance();
      }

      @java.lang.Override
      public snake_data.SnakeData.Feed build() {
        snake_data.SnakeData.Feed result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public snake_data.SnakeData.Feed buildPartial() {
        snake_data.SnakeData.Feed result = new snake_data.SnakeData.Feed(this);
        if (pointBuilder_ == null) {
          result.point_ = point_;
        } else {
          result.point_ = pointBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof snake_data.SnakeData.Feed) {
          return mergeFrom((snake_data.SnakeData.Feed)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(snake_data.SnakeData.Feed other) {
        if (other == snake_data.SnakeData.Feed.getDefaultInstance()) return this;
        if (other.hasPoint()) {
          mergePoint(other.getPoint());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        snake_data.SnakeData.Feed parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (snake_data.SnakeData.Feed) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private snake_data.SnakeData.Coordinate point_;
      private com.google.protobuf.SingleFieldBuilderV3<
          snake_data.SnakeData.Coordinate, snake_data.SnakeData.Coordinate.Builder, snake_data.SnakeData.CoordinateOrBuilder> pointBuilder_;
      /**
       * <code>.snake_data.Coordinate point = 1;</code>
       * @return Whether the point field is set.
       */
      public boolean hasPoint() {
        return pointBuilder_ != null || point_ != null;
      }
      /**
       * <code>.snake_data.Coordinate point = 1;</code>
       * @return The point.
       */
      public snake_data.SnakeData.Coordinate getPoint() {
        if (pointBuilder_ == null) {
          return point_ == null ? snake_data.SnakeData.Coordinate.getDefaultInstance() : point_;
        } else {
          return pointBuilder_.getMessage();
        }
      }
      /**
       * <code>.snake_data.Coordinate point = 1;</code>
       */
      public Builder setPoint(snake_data.SnakeData.Coordinate value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          point_ = value;
          onChanged();
        } else {
          pointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.snake_data.Coordinate point = 1;</code>
       */
      public Builder setPoint(
          snake_data.SnakeData.Coordinate.Builder builderForValue) {
        if (pointBuilder_ == null) {
          point_ = builderForValue.build();
          onChanged();
        } else {
          pointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.snake_data.Coordinate point = 1;</code>
       */
      public Builder mergePoint(snake_data.SnakeData.Coordinate value) {
        if (pointBuilder_ == null) {
          if (point_ != null) {
            point_ =
              snake_data.SnakeData.Coordinate.newBuilder(point_).mergeFrom(value).buildPartial();
          } else {
            point_ = value;
          }
          onChanged();
        } else {
          pointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.snake_data.Coordinate point = 1;</code>
       */
      public Builder clearPoint() {
        if (pointBuilder_ == null) {
          point_ = null;
          onChanged();
        } else {
          point_ = null;
          pointBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.snake_data.Coordinate point = 1;</code>
       */
      public snake_data.SnakeData.Coordinate.Builder getPointBuilder() {
        
        onChanged();
        return getPointFieldBuilder().getBuilder();
      }
      /**
       * <code>.snake_data.Coordinate point = 1;</code>
       */
      public snake_data.SnakeData.CoordinateOrBuilder getPointOrBuilder() {
        if (pointBuilder_ != null) {
          return pointBuilder_.getMessageOrBuilder();
        } else {
          return point_ == null ?
              snake_data.SnakeData.Coordinate.getDefaultInstance() : point_;
        }
      }
      /**
       * <code>.snake_data.Coordinate point = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          snake_data.SnakeData.Coordinate, snake_data.SnakeData.Coordinate.Builder, snake_data.SnakeData.CoordinateOrBuilder> 
          getPointFieldBuilder() {
        if (pointBuilder_ == null) {
          pointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              snake_data.SnakeData.Coordinate, snake_data.SnakeData.Coordinate.Builder, snake_data.SnakeData.CoordinateOrBuilder>(
                  getPoint(),
                  getParentForChildren(),
                  isClean());
          point_ = null;
        }
        return pointBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snake_data.Feed)
    }

    // @@protoc_insertion_point(class_scope:snake_data.Feed)
    private static final snake_data.SnakeData.Feed DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new snake_data.SnakeData.Feed();
    }

    public static snake_data.SnakeData.Feed getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Feed>
        PARSER = new com.google.protobuf.AbstractParser<Feed>() {
      @java.lang.Override
      public Feed parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Feed(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Feed> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Feed> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public snake_data.SnakeData.Feed getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SnakeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snake_data.Snake)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 length = 1;</code>
     * @return The length.
     */
    int getLength();

    /**
     * <code>repeated .snake_data.Coordinate points = 2;</code>
     */
    java.util.List<snake_data.SnakeData.Coordinate> 
        getPointsList();
    /**
     * <code>repeated .snake_data.Coordinate points = 2;</code>
     */
    snake_data.SnakeData.Coordinate getPoints(int index);
    /**
     * <code>repeated .snake_data.Coordinate points = 2;</code>
     */
    int getPointsCount();
    /**
     * <code>repeated .snake_data.Coordinate points = 2;</code>
     */
    java.util.List<? extends snake_data.SnakeData.CoordinateOrBuilder> 
        getPointsOrBuilderList();
    /**
     * <code>repeated .snake_data.Coordinate points = 2;</code>
     */
    snake_data.SnakeData.CoordinateOrBuilder getPointsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code snake_data.Snake}
   */
  public static final class Snake extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snake_data.Snake)
      SnakeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Snake.newBuilder() to construct.
    private Snake(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Snake() {
      points_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Snake();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Snake(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              length_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                points_ = new java.util.ArrayList<snake_data.SnakeData.Coordinate>();
                mutable_bitField0_ |= 0x00000001;
              }
              points_.add(
                  input.readMessage(snake_data.SnakeData.Coordinate.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          points_ = java.util.Collections.unmodifiableList(points_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return snake_data.SnakeData.internal_static_snake_data_Snake_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return snake_data.SnakeData.internal_static_snake_data_Snake_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              snake_data.SnakeData.Snake.class, snake_data.SnakeData.Snake.Builder.class);
    }

    public static final int LENGTH_FIELD_NUMBER = 1;
    private int length_;
    /**
     * <code>int32 length = 1;</code>
     * @return The length.
     */
    @java.lang.Override
    public int getLength() {
      return length_;
    }

    public static final int POINTS_FIELD_NUMBER = 2;
    private java.util.List<snake_data.SnakeData.Coordinate> points_;
    /**
     * <code>repeated .snake_data.Coordinate points = 2;</code>
     */
    @java.lang.Override
    public java.util.List<snake_data.SnakeData.Coordinate> getPointsList() {
      return points_;
    }
    /**
     * <code>repeated .snake_data.Coordinate points = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends snake_data.SnakeData.CoordinateOrBuilder> 
        getPointsOrBuilderList() {
      return points_;
    }
    /**
     * <code>repeated .snake_data.Coordinate points = 2;</code>
     */
    @java.lang.Override
    public int getPointsCount() {
      return points_.size();
    }
    /**
     * <code>repeated .snake_data.Coordinate points = 2;</code>
     */
    @java.lang.Override
    public snake_data.SnakeData.Coordinate getPoints(int index) {
      return points_.get(index);
    }
    /**
     * <code>repeated .snake_data.Coordinate points = 2;</code>
     */
    @java.lang.Override
    public snake_data.SnakeData.CoordinateOrBuilder getPointsOrBuilder(
        int index) {
      return points_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (length_ != 0) {
        output.writeInt32(1, length_);
      }
      for (int i = 0; i < points_.size(); i++) {
        output.writeMessage(2, points_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (length_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, length_);
      }
      for (int i = 0; i < points_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, points_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof snake_data.SnakeData.Snake)) {
        return super.equals(obj);
      }
      snake_data.SnakeData.Snake other = (snake_data.SnakeData.Snake) obj;

      if (getLength()
          != other.getLength()) return false;
      if (!getPointsList()
          .equals(other.getPointsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LENGTH_FIELD_NUMBER;
      hash = (53 * hash) + getLength();
      if (getPointsCount() > 0) {
        hash = (37 * hash) + POINTS_FIELD_NUMBER;
        hash = (53 * hash) + getPointsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static snake_data.SnakeData.Snake parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static snake_data.SnakeData.Snake parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static snake_data.SnakeData.Snake parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static snake_data.SnakeData.Snake parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static snake_data.SnakeData.Snake parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static snake_data.SnakeData.Snake parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static snake_data.SnakeData.Snake parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static snake_data.SnakeData.Snake parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static snake_data.SnakeData.Snake parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static snake_data.SnakeData.Snake parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static snake_data.SnakeData.Snake parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static snake_data.SnakeData.Snake parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(snake_data.SnakeData.Snake prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code snake_data.Snake}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snake_data.Snake)
        snake_data.SnakeData.SnakeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return snake_data.SnakeData.internal_static_snake_data_Snake_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return snake_data.SnakeData.internal_static_snake_data_Snake_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                snake_data.SnakeData.Snake.class, snake_data.SnakeData.Snake.Builder.class);
      }

      // Construct using snake_data.SnakeData.Snake.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPointsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        length_ = 0;

        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return snake_data.SnakeData.internal_static_snake_data_Snake_descriptor;
      }

      @java.lang.Override
      public snake_data.SnakeData.Snake getDefaultInstanceForType() {
        return snake_data.SnakeData.Snake.getDefaultInstance();
      }

      @java.lang.Override
      public snake_data.SnakeData.Snake build() {
        snake_data.SnakeData.Snake result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public snake_data.SnakeData.Snake buildPartial() {
        snake_data.SnakeData.Snake result = new snake_data.SnakeData.Snake(this);
        int from_bitField0_ = bitField0_;
        result.length_ = length_;
        if (pointsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            points_ = java.util.Collections.unmodifiableList(points_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.points_ = points_;
        } else {
          result.points_ = pointsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof snake_data.SnakeData.Snake) {
          return mergeFrom((snake_data.SnakeData.Snake)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(snake_data.SnakeData.Snake other) {
        if (other == snake_data.SnakeData.Snake.getDefaultInstance()) return this;
        if (other.getLength() != 0) {
          setLength(other.getLength());
        }
        if (pointsBuilder_ == null) {
          if (!other.points_.isEmpty()) {
            if (points_.isEmpty()) {
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePointsIsMutable();
              points_.addAll(other.points_);
            }
            onChanged();
          }
        } else {
          if (!other.points_.isEmpty()) {
            if (pointsBuilder_.isEmpty()) {
              pointsBuilder_.dispose();
              pointsBuilder_ = null;
              points_ = other.points_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pointsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPointsFieldBuilder() : null;
            } else {
              pointsBuilder_.addAllMessages(other.points_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        snake_data.SnakeData.Snake parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (snake_data.SnakeData.Snake) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int length_ ;
      /**
       * <code>int32 length = 1;</code>
       * @return The length.
       */
      @java.lang.Override
      public int getLength() {
        return length_;
      }
      /**
       * <code>int32 length = 1;</code>
       * @param value The length to set.
       * @return This builder for chaining.
       */
      public Builder setLength(int value) {
        
        length_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 length = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLength() {
        
        length_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<snake_data.SnakeData.Coordinate> points_ =
        java.util.Collections.emptyList();
      private void ensurePointsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          points_ = new java.util.ArrayList<snake_data.SnakeData.Coordinate>(points_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          snake_data.SnakeData.Coordinate, snake_data.SnakeData.Coordinate.Builder, snake_data.SnakeData.CoordinateOrBuilder> pointsBuilder_;

      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public java.util.List<snake_data.SnakeData.Coordinate> getPointsList() {
        if (pointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(points_);
        } else {
          return pointsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public int getPointsCount() {
        if (pointsBuilder_ == null) {
          return points_.size();
        } else {
          return pointsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public snake_data.SnakeData.Coordinate getPoints(int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);
        } else {
          return pointsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public Builder setPoints(
          int index, snake_data.SnakeData.Coordinate value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.set(index, value);
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public Builder setPoints(
          int index, snake_data.SnakeData.Coordinate.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public Builder addPoints(snake_data.SnakeData.Coordinate value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public Builder addPoints(
          int index, snake_data.SnakeData.Coordinate value) {
        if (pointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointsIsMutable();
          points_.add(index, value);
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public Builder addPoints(
          snake_data.SnakeData.Coordinate.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public Builder addPoints(
          int index, snake_data.SnakeData.Coordinate.Builder builderForValue) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public Builder addAllPoints(
          java.lang.Iterable<? extends snake_data.SnakeData.Coordinate> values) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, points_);
          onChanged();
        } else {
          pointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public Builder clearPoints() {
        if (pointsBuilder_ == null) {
          points_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public Builder removePoints(int index) {
        if (pointsBuilder_ == null) {
          ensurePointsIsMutable();
          points_.remove(index);
          onChanged();
        } else {
          pointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public snake_data.SnakeData.Coordinate.Builder getPointsBuilder(
          int index) {
        return getPointsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public snake_data.SnakeData.CoordinateOrBuilder getPointsOrBuilder(
          int index) {
        if (pointsBuilder_ == null) {
          return points_.get(index);  } else {
          return pointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public java.util.List<? extends snake_data.SnakeData.CoordinateOrBuilder> 
           getPointsOrBuilderList() {
        if (pointsBuilder_ != null) {
          return pointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(points_);
        }
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public snake_data.SnakeData.Coordinate.Builder addPointsBuilder() {
        return getPointsFieldBuilder().addBuilder(
            snake_data.SnakeData.Coordinate.getDefaultInstance());
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public snake_data.SnakeData.Coordinate.Builder addPointsBuilder(
          int index) {
        return getPointsFieldBuilder().addBuilder(
            index, snake_data.SnakeData.Coordinate.getDefaultInstance());
      }
      /**
       * <code>repeated .snake_data.Coordinate points = 2;</code>
       */
      public java.util.List<snake_data.SnakeData.Coordinate.Builder> 
           getPointsBuilderList() {
        return getPointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          snake_data.SnakeData.Coordinate, snake_data.SnakeData.Coordinate.Builder, snake_data.SnakeData.CoordinateOrBuilder> 
          getPointsFieldBuilder() {
        if (pointsBuilder_ == null) {
          pointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              snake_data.SnakeData.Coordinate, snake_data.SnakeData.Coordinate.Builder, snake_data.SnakeData.CoordinateOrBuilder>(
                  points_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          points_ = null;
        }
        return pointsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snake_data.Snake)
    }

    // @@protoc_insertion_point(class_scope:snake_data.Snake)
    private static final snake_data.SnakeData.Snake DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new snake_data.SnakeData.Snake();
    }

    public static snake_data.SnakeData.Snake getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Snake>
        PARSER = new com.google.protobuf.AbstractParser<Snake>() {
      @java.lang.Override
      public Snake parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Snake(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Snake> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Snake> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public snake_data.SnakeData.Snake getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snake_data.User)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>bool owner_flag = 2;</code>
     * @return The ownerFlag.
     */
    boolean getOwnerFlag();

    /**
     * <code>.snake_data.Snake snake = 3;</code>
     * @return Whether the snake field is set.
     */
    boolean hasSnake();
    /**
     * <code>.snake_data.Snake snake = 3;</code>
     * @return The snake.
     */
    snake_data.SnakeData.Snake getSnake();
    /**
     * <code>.snake_data.Snake snake = 3;</code>
     */
    snake_data.SnakeData.SnakeOrBuilder getSnakeOrBuilder();
  }
  /**
   * Protobuf type {@code snake_data.User}
   */
  public static final class User extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:snake_data.User)
      UserOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use User.newBuilder() to construct.
    private User(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private User() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new User();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private User(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              ownerFlag_ = input.readBool();
              break;
            }
            case 26: {
              snake_data.SnakeData.Snake.Builder subBuilder = null;
              if (snake_ != null) {
                subBuilder = snake_.toBuilder();
              }
              snake_ = input.readMessage(snake_data.SnakeData.Snake.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(snake_);
                snake_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return snake_data.SnakeData.internal_static_snake_data_User_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return snake_data.SnakeData.internal_static_snake_data_User_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              snake_data.SnakeData.User.class, snake_data.SnakeData.User.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OWNER_FLAG_FIELD_NUMBER = 2;
    private boolean ownerFlag_;
    /**
     * <code>bool owner_flag = 2;</code>
     * @return The ownerFlag.
     */
    @java.lang.Override
    public boolean getOwnerFlag() {
      return ownerFlag_;
    }

    public static final int SNAKE_FIELD_NUMBER = 3;
    private snake_data.SnakeData.Snake snake_;
    /**
     * <code>.snake_data.Snake snake = 3;</code>
     * @return Whether the snake field is set.
     */
    @java.lang.Override
    public boolean hasSnake() {
      return snake_ != null;
    }
    /**
     * <code>.snake_data.Snake snake = 3;</code>
     * @return The snake.
     */
    @java.lang.Override
    public snake_data.SnakeData.Snake getSnake() {
      return snake_ == null ? snake_data.SnakeData.Snake.getDefaultInstance() : snake_;
    }
    /**
     * <code>.snake_data.Snake snake = 3;</code>
     */
    @java.lang.Override
    public snake_data.SnakeData.SnakeOrBuilder getSnakeOrBuilder() {
      return getSnake();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (ownerFlag_ != false) {
        output.writeBool(2, ownerFlag_);
      }
      if (snake_ != null) {
        output.writeMessage(3, getSnake());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (ownerFlag_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, ownerFlag_);
      }
      if (snake_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSnake());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof snake_data.SnakeData.User)) {
        return super.equals(obj);
      }
      snake_data.SnakeData.User other = (snake_data.SnakeData.User) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (getOwnerFlag()
          != other.getOwnerFlag()) return false;
      if (hasSnake() != other.hasSnake()) return false;
      if (hasSnake()) {
        if (!getSnake()
            .equals(other.getSnake())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + OWNER_FLAG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getOwnerFlag());
      if (hasSnake()) {
        hash = (37 * hash) + SNAKE_FIELD_NUMBER;
        hash = (53 * hash) + getSnake().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static snake_data.SnakeData.User parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static snake_data.SnakeData.User parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static snake_data.SnakeData.User parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static snake_data.SnakeData.User parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static snake_data.SnakeData.User parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static snake_data.SnakeData.User parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static snake_data.SnakeData.User parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static snake_data.SnakeData.User parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static snake_data.SnakeData.User parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static snake_data.SnakeData.User parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static snake_data.SnakeData.User parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static snake_data.SnakeData.User parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(snake_data.SnakeData.User prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code snake_data.User}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snake_data.User)
        snake_data.SnakeData.UserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return snake_data.SnakeData.internal_static_snake_data_User_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return snake_data.SnakeData.internal_static_snake_data_User_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                snake_data.SnakeData.User.class, snake_data.SnakeData.User.Builder.class);
      }

      // Construct using snake_data.SnakeData.User.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        ownerFlag_ = false;

        if (snakeBuilder_ == null) {
          snake_ = null;
        } else {
          snake_ = null;
          snakeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return snake_data.SnakeData.internal_static_snake_data_User_descriptor;
      }

      @java.lang.Override
      public snake_data.SnakeData.User getDefaultInstanceForType() {
        return snake_data.SnakeData.User.getDefaultInstance();
      }

      @java.lang.Override
      public snake_data.SnakeData.User build() {
        snake_data.SnakeData.User result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public snake_data.SnakeData.User buildPartial() {
        snake_data.SnakeData.User result = new snake_data.SnakeData.User(this);
        result.name_ = name_;
        result.ownerFlag_ = ownerFlag_;
        if (snakeBuilder_ == null) {
          result.snake_ = snake_;
        } else {
          result.snake_ = snakeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof snake_data.SnakeData.User) {
          return mergeFrom((snake_data.SnakeData.User)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(snake_data.SnakeData.User other) {
        if (other == snake_data.SnakeData.User.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getOwnerFlag() != false) {
          setOwnerFlag(other.getOwnerFlag());
        }
        if (other.hasSnake()) {
          mergeSnake(other.getSnake());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        snake_data.SnakeData.User parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (snake_data.SnakeData.User) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private boolean ownerFlag_ ;
      /**
       * <code>bool owner_flag = 2;</code>
       * @return The ownerFlag.
       */
      @java.lang.Override
      public boolean getOwnerFlag() {
        return ownerFlag_;
      }
      /**
       * <code>bool owner_flag = 2;</code>
       * @param value The ownerFlag to set.
       * @return This builder for chaining.
       */
      public Builder setOwnerFlag(boolean value) {
        
        ownerFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool owner_flag = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOwnerFlag() {
        
        ownerFlag_ = false;
        onChanged();
        return this;
      }

      private snake_data.SnakeData.Snake snake_;
      private com.google.protobuf.SingleFieldBuilderV3<
          snake_data.SnakeData.Snake, snake_data.SnakeData.Snake.Builder, snake_data.SnakeData.SnakeOrBuilder> snakeBuilder_;
      /**
       * <code>.snake_data.Snake snake = 3;</code>
       * @return Whether the snake field is set.
       */
      public boolean hasSnake() {
        return snakeBuilder_ != null || snake_ != null;
      }
      /**
       * <code>.snake_data.Snake snake = 3;</code>
       * @return The snake.
       */
      public snake_data.SnakeData.Snake getSnake() {
        if (snakeBuilder_ == null) {
          return snake_ == null ? snake_data.SnakeData.Snake.getDefaultInstance() : snake_;
        } else {
          return snakeBuilder_.getMessage();
        }
      }
      /**
       * <code>.snake_data.Snake snake = 3;</code>
       */
      public Builder setSnake(snake_data.SnakeData.Snake value) {
        if (snakeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          snake_ = value;
          onChanged();
        } else {
          snakeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.snake_data.Snake snake = 3;</code>
       */
      public Builder setSnake(
          snake_data.SnakeData.Snake.Builder builderForValue) {
        if (snakeBuilder_ == null) {
          snake_ = builderForValue.build();
          onChanged();
        } else {
          snakeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.snake_data.Snake snake = 3;</code>
       */
      public Builder mergeSnake(snake_data.SnakeData.Snake value) {
        if (snakeBuilder_ == null) {
          if (snake_ != null) {
            snake_ =
              snake_data.SnakeData.Snake.newBuilder(snake_).mergeFrom(value).buildPartial();
          } else {
            snake_ = value;
          }
          onChanged();
        } else {
          snakeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.snake_data.Snake snake = 3;</code>
       */
      public Builder clearSnake() {
        if (snakeBuilder_ == null) {
          snake_ = null;
          onChanged();
        } else {
          snake_ = null;
          snakeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.snake_data.Snake snake = 3;</code>
       */
      public snake_data.SnakeData.Snake.Builder getSnakeBuilder() {
        
        onChanged();
        return getSnakeFieldBuilder().getBuilder();
      }
      /**
       * <code>.snake_data.Snake snake = 3;</code>
       */
      public snake_data.SnakeData.SnakeOrBuilder getSnakeOrBuilder() {
        if (snakeBuilder_ != null) {
          return snakeBuilder_.getMessageOrBuilder();
        } else {
          return snake_ == null ?
              snake_data.SnakeData.Snake.getDefaultInstance() : snake_;
        }
      }
      /**
       * <code>.snake_data.Snake snake = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          snake_data.SnakeData.Snake, snake_data.SnakeData.Snake.Builder, snake_data.SnakeData.SnakeOrBuilder> 
          getSnakeFieldBuilder() {
        if (snakeBuilder_ == null) {
          snakeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              snake_data.SnakeData.Snake, snake_data.SnakeData.Snake.Builder, snake_data.SnakeData.SnakeOrBuilder>(
                  getSnake(),
                  getParentForChildren(),
                  isClean());
          snake_ = null;
        }
        return snakeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:snake_data.User)
    }

    // @@protoc_insertion_point(class_scope:snake_data.User)
    private static final snake_data.SnakeData.User DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new snake_data.SnakeData.User();
    }

    public static snake_data.SnakeData.User getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<User>
        PARSER = new com.google.protobuf.AbstractParser<User>() {
      @java.lang.Override
      public User parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new User(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<User> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<User> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public snake_data.SnakeData.User getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snake_data_Board_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snake_data_Board_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snake_data_Coordinate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snake_data_Coordinate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snake_data_Feed_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snake_data_Feed_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snake_data_Snake_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snake_data_Snake_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snake_data_User_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_snake_data_User_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020snake_data.proto\022\nsnake_data\"I\n\005Board\022" +
      "\037\n\005feeds\030\001 \003(\0132\020.snake_data.Feed\022\037\n\005user" +
      "s\030\002 \003(\0132\020.snake_data.User\"\"\n\nCoordinate\022" +
      "\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\"-\n\004Feed\022%\n\005point\030\001" +
      " \001(\0132\026.snake_data.Coordinate\"?\n\005Snake\022\016\n" +
      "\006length\030\001 \001(\005\022&\n\006points\030\002 \003(\0132\026.snake_da" +
      "ta.Coordinate\"J\n\004User\022\014\n\004name\030\001 \001(\t\022\022\n\no" +
      "wner_flag\030\002 \001(\010\022 \n\005snake\030\003 \001(\0132\021.snake_d" +
      "ata.Snakeb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_snake_data_Board_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_snake_data_Board_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snake_data_Board_descriptor,
        new java.lang.String[] { "Feeds", "Users", });
    internal_static_snake_data_Coordinate_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_snake_data_Coordinate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snake_data_Coordinate_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_snake_data_Feed_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_snake_data_Feed_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snake_data_Feed_descriptor,
        new java.lang.String[] { "Point", });
    internal_static_snake_data_Snake_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_snake_data_Snake_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snake_data_Snake_descriptor,
        new java.lang.String[] { "Length", "Points", });
    internal_static_snake_data_User_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_snake_data_User_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_snake_data_User_descriptor,
        new java.lang.String[] { "Name", "OwnerFlag", "Snake", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
